import React from 'react';
import ReactDOM from 'react-dom';
import './index.css';
import App from './App';
import * as serviceWorker from './serviceWorker';
import logger from 'redux-logger'

import { createStore, combineReducers, applyMiddleware, compose } from 'redux'; 
// 1.createStore생성 2. userReducer 함수생성 후 dispatch 4. applyMiddleware


const CHANGE_USER_NAME = 'CHANGE_USER_NAME'

function changeUser(name) {
    return {
        type: CHANGE_USER_NAME,
        name: name,
    }
}

function userReducer(state = { name: 'dfault name' }, action) {
    switch (action.type) {
        case CHANGE_USER_NAME:
            return Object.assign({}, state, {
                name: action.name
            });

        default:
            return state;
    }
}

function articleReducer(state = { list: [] }, action) { //
    switch (action.type) {

        default:
            return state;
    }
}

const store = createStore(
    combineReducers({  // combineReducers > userReducer  state.user.name
        user: userReducer,
        article: articleReducer
    }),
    compose(
        applyMiddleware(logger),
        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__() // redux-devtools 설치하고 window..... 코드추가
    )
);  // applyMiddleware  action추적


// store.subscribe(()=>{ // subscribe store의 상태가 바뀔때 마다 정보를 받아둔다.구독한다.
//     console.log(store.getState()) //
// })

store.dispatch(changeUser('abc'))

store.dispatch(changeUser('user name'))



ReactDOM.render(<App />, document.getElementById('root'));

// If you want your app to work offline and load faster, you can change
// unregister() to register() below. Note this comes with some pitfalls.
// Learn more about service workers: https://bit.ly/CRA-PWA
serviceWorker.unregister();
